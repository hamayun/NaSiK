#!/bin/bash

export TARGET_PREFIX="$PWD/build-$CONFIGURATION"
export APP_NAME="app-arm-$CONFIGURATION.so"

export TARGET_CAL="NATIVE"
export TARGET_SYSTEM_KSP_OS="SYSTEM_KSP_OS_DNA"
export TARGET_SYSTEM_KSP_TASK="SYSTEM_KSP_TASK_PTHREAD"
export TARGET_SYSTEM_ASP_C=""
export TARGET_SYSTEM_ASP_M=""
export TARGET_SYSTEM_ASP_COM="SYSTEM_ASP_COM_KPN"
export TARGET_SYSTEM_SSP_CAL="SYSTEM_SSP_CAL_${TARGET_CAL}"
export TARGET_SYSTEM_SSP_PAL="SYSTEM_SSP_PAL_NATIVE"
export TARGET_SYSTEM_LIBS="${TARGET_SYSTEM_SSP_CAL} ${TARGET_SYSTEM_KSP_OS} ${TARGET_SYSTEM_ASP_COM} ${TARGET_SYSTEM_KSP_TASK} ${TARGET_SYSTEM_ASP_C} ${TARGET_SYSTEM_ASP_M}"  

export DNA_CFLAGS="-DDNA_ENABLE_TRACE"
export DNA_CHANNEL_DEVICES="rendezvous"
export DNA_SYSTEM_DEVICES="soclib"
export DNA_DISK_DEVICES="fdaccess"
export DNA_FILESYSTEMS="devfs rootfs"

# We are using the same includes because the NewLibC has not be annotated with llvm. 
# Once we annoatate the newlibc using llvm, we can use the new includes paths here.
#export STDINC="-nostdinc -I/PRIMARY_TOOLCHAIN/lib/gcc/i686-pc-linux-gnu/4.2.1/include/
export STDINC="-nostdinc -I$SECONDARY_TOOLCHAIN/i386-sls-dnaos/include -I$SECONDARY_TOOLCHAIN/lib/gcc/i386-sls-dnaos/4.3.2/include"

export CRT0="$SECONDARY_TOOLCHAIN/i386-sls-dnaos/lib/crt0.o"

export TARGET_LLVMGCC="llvm-gcc"
export TARGET_LLC="llc"
export TARGET_CFLAGS="-pipe -Wall -Werror -O0 -std=c99 -U__linux__ -DPROGRESS"
export TARGET_AS="i386-sls-dnaos-as"
export TARGET_LD="llvm-gcc"
export TARGET_LDFLAGS="-shared -nostdlib -nodefaultlibs ${CRT0} -L$SECONDARY_TOOLCHAIN/i386-sls-dnaos/lib"
export TARGET_AR="i386-sls-dnaos-ar"
export TARGET_ARFLAGS="cru"
export TARGET_RANLIB="i386-sls-dnaos-ranlib"
export TARGET_LDSCRIPT=""

if [ $USE_ANNOTATIONS = "yes" ]; then
	export ANNOTATION=-annotate=arm
else 
	export ANNOTATION=""
fi

