
apes_clean:
ifneq ($(strip $(SUBDIRS)),)
		for i in $(SUBDIRS) ; do make -C $$i apes_clean || exit $?; done; 
endif

ifneq ($(strip $(BUILDDIR)),)
	rm -rf $(BUILDDIR)/*.o $(BUILDDIR)/*.a
endif

apes_submake: create_builddir 
ifneq ($(strip $(SUBDIRS)),)
	for i in $(SUBDIRS) ; do make -C $$i || exit $? ; done;
endif

apes_lib: apes_submake
	$(TARGET_AR) $(TARGET_ARFLAGS) $(BUILDDIR)/$(TARGETLIB) $(BUILDDIR)/objs/*.o
	$(TARGET_RANLIB) $(BUILDDIR)/$(TARGETLIB)

apes_objects : create_builddir $(OBJ)

$(BUILDDIR)/%.o : %.c
	echo '         | CC $<'
	$(TARGET_LLVMGCC) -emit-llvm $(CFLAGS) $(STDINC) -o $(addsuffix .bc, $(basename $@)) -c $<
	$(TARGET_LLC) $(ANNOTATION) $(addsuffix .bc, $(basename $@)) -f -o $(addsuffix .s, $(basename $@))
	$(TARGET_AS) $(addsuffix .s, $(basename $@)) -o $@

#	$(TARGET_LLC) $(ANNOTATION) -print-dual-cfg $(addsuffix .bc, $(basename $@)) -f -o $(addsuffix .s, $(basename $@))
#	$(TARGET_LLC) -march=arm $(addsuffix .bc, $(basename $@)) -f -o $(addsuffix .arm, $(basename $@))
#	llvm-dis $(addsuffix .bc, $(basename $@)) -o $(addsuffix .ll, $(basename $@))

$(BUILDDIR)/%.o : %.S
	echo '         | CC $<'
	$(TARGET_AS) -o $@ $(TARGET_ASFLAGS) $(STDINC) $<

create_builddir:
ifneq ($(strip $(BUILDDIR)),)
	mkdir -p $(BUILDDIR)
endif
